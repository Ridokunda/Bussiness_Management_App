<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/custom.css">
</head>
<body>
    <div class="admin-container">
        <div class="sidebar">
            <div class="logo">
                <h1>WeFixIt</h1>
            </div>
            <div class="admin-pages">
                <ul>
                    <li><a  href="/">Home</a></li>
                    <li><a class="link" href="#" id="stats-link">Dashboard Analytics</a></li>
                    <li><a class="link" href="#" id="user-management-link">User management</a></li>
                    <li><a class="link" href="#" id="bookings-link">Bookings</a></li>
                    <li><a href="/login/logout">Logout</a></li>
                </ul>
            </div>
        </div>
        <div class="content"></div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const contentDiv = document.querySelector('.content');

            document.querySelectorAll('.admin-pages .link').forEach(link => {
                link.addEventListener('click', async event => {
                    event.preventDefault();

                    const linkid = event.target.id;
                    let url = '';

                    if (linkid === 'user-management-link') {
                        url = '/admin/manageusers';
                    } else if (linkid === 'bookings-link') {
                        url = '/admin/bookings';
                    } else if (linkid === 'stats-link') {
                        url = '/admin/stats';
                    }

                    try {
                        const response = await fetch(url);

                        if (response.ok) {
                            const content = await response.text();
                            contentDiv.innerHTML = content;
                            attachEventListeners(); // Attach event listeners after content is loaded
                        } else {
                            contentDiv.innerHTML = '<p>Failure while loading content</p>';
                        }
                    } catch (error) {
                        contentDiv.innerHTML = '<p>Error while loading content</p>';
                        console.error('error', error);
                    }
                });
            });

            function attachEventListeners() {
                //eventlisteners for manageuser page
                const contentDiv = document.querySelector('.content');
                document.querySelectorAll('.stats a').forEach(link =>{
                    link.addEventListener('click', async (event) =>{
                        event.preventDefault();
                        var url = '';
                        linkid = event.currentTarget.id;
                        switch(linkid){
                            case 'customers-link':
                                url = '/admin/managecustomers';
                                break;
                            case 'plumbers-link':
                                url = '/admin/manageplumbers'
                                break;
                            case 'stats-link':
                                url = '/admin/stats';
                                break;
                            default:
                                url = '/admin/manageusers'
                                break;
                        }

                        try{
                            const response = await fetch(url);
                            
                            if(response.ok){
                                const content = await response.text();
                                contentDiv.innerHTML = content;
                            }else{
                                contentDiv.innerHTML = '<p>Failure while loading content</p>';
                            }
                        }catch(error){
                            contentDiv.innerHTML = '<p>Error while loading content</p>';
                            console.error('error', error);
                        }
                    });
                });

                const usertype = document.getElementById('usertype');
                if(usertype!==null){
                    usertype.addEventListener('change', function() {
                        var userType = this.value;
                        var adminFields = document.getElementById('adminFields');
                        var plumberFields = document.getElementById('plumberFields');

                        adminFields.style.display = 'none';
                        plumberFields.style.display = 'none';

                        if (userType == '2') {
                            adminFields.style.display = 'block';
                        } else if (userType == '3') {
                            plumberFields.style.display = 'block';
                        }
                    });
                }
                 
                //eventlisteners for bookings page
                const buttons = document.querySelectorAll('.btn-assign');

                buttons.forEach(button => {
                    button.addEventListener('click', (event) => {
                        console.log('Button clicked');
                        const bookingId = event.target.getAttribute('data-booking-id');
                        const popup = document.getElementById(`assign-container-${bookingId}`);
                        popup.style.display = 'block';
                        attachEventListeners();
                    });
                });

                document.querySelectorAll('.close').forEach(span => {
                    span.addEventListener('click', (event) => {
                        console.log('Close button clicked');
                        const popup = event.target.closest('.assign-container');
                        popup.style.display = 'none';
                    });
                });
                // Event listener for the inner "Assign" button within the plumber list
                // This targets the new class 'btn-assign-plumber'
                document.querySelectorAll('.btn-assign-plumber').forEach(button => {
                    button.addEventListener('click', (event) => {
                        const plumberId = event.target.getAttribute('data-plumber-id');
                        const bookingId = event.target.getAttribute('data-booking-id'); // Get bookingId directly from the button

                        console.log(`Attempting to assign booking ${bookingId} to plumber ${plumberId}`);

                        const data = { booking_id: bookingId, plumber_id: plumberId }; // Match backend expected keys

                        fetch('/admin/assign-booking', { // Use the correct backend endpoint
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(data),
                        })
                        .then(response => {
                            if (!response.ok) {
                                // If response is not ok (e.g., 400, 500), read the error message from the body
                                return response.json().then(errorData => {
                                    throw new Error(errorData.message || 'Error while assigning plumber');
                                });
                            }
                            return response.json(); // Parse JSON response for success message
                        })
                        .then(data => {
                            alert(data.message);
                            // Close the popup after successful assignment
                            const popup = event.target.closest('.assign-container');
                            if (popup) {
                                popup.style.display = 'none';
                            }
                            // Re-load bookings to show updated status/assignment
                            // This simulates clicking the 'Bookings' link in the sidebar to refresh the content
                            const bookingsLink = document.getElementById('bookings-link');
                            if (bookingsLink) {
                                bookingsLink.click();
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert(`Failed to assign plumber: ${error.message}`);
                        });
                    });
                });
                function getBookingID(){
                    const div = document.querySelector('div[id^=assign-container-]');
                    const bookingid = div.id.replace('assign-container-','');
                    return bookingid;
                }
                window.addEventListener('click', (event) => {
                    if (event.target.classList.contains('assign-container')) {
                        console.log('Outside popup clicked');
                        event.target.style.display = 'none';
                    }
                });
                //decline booking button
                const declineButtons = document.querySelectorAll('button[id^=btndecline]');
                if(declineButtons != null){
                    declineButtons.forEach(button =>{
                        button.addEventListener('click', (event) =>{
                            event.preventDefault();

                            const booking_id = event.target.id.replace('btndecline', '');
                            fetch('/admin/declinebooking', {
                                method: 'POST',
                                headers:{
                                    'Content-Type':'application/json'
                                },
                                body: JSON.stringify({booking_id : booking_id})
                            })
                            .then(response => response.json())
                            .then(data =>{
                                alert(data.message);
                            })
                            .catch(error =>{
                                alert(error);
                            })
                        })
                    })
                }
                
            }
        });
    </script>
</body>
</html> 